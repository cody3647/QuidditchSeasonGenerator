#
# Quidditch Season Generator
# Copyright (C) 2022.  Cody Williams
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
###########################################################################################
#                           Application Text                                              #
###########################################################################################
app.title                       = Quidditch Season Generator
app.menu.file                   = _File
app.menu.new                    = New
app.menu.open                   = Open\u2026
app.menu.close                  = Close
app.menu.save                   = Save
app.menu.saveas                 = Save As\u2026
app.menu.help                   = _Help
app.menu.about                  = About Quidditch Season Generator...
app.menu.matchCalendar          = Match Calendar
app.menu.mediawiki.logs         = Set Mediawiki logs to...
app.menu.matchGenerator.logs    = Set Match Generator logs to...
app.menu.logLevel.info          = Info
app.menu.logLevel.debug         = Debug
app.menu.logLevel.trace         = Trace
app.menu.mediawiki              = MediaWiki
app.menu.mediawiki.setup        = Setup MediaWiki
app.mediawiki.title             = Setup MediaWiki Instance
app.mediawiki.apiUrl            = MediaWiki API URL
app.mediawiki.apiDesc           = API URL can be found on Special:Version
app.mediawiki.username          = Username
app.mediawiki.password          = Password
app.mediawiki.login             = Login
app.label.teams                 = Teams
app.button.newTeam              = New
app.button.randomTeam           = Random
app.button.removeTeam           = Remove
app.button.teamEditor           = Edit Teams
app.button.tournamentEditor     = Edit Tournament
info.tournament                 = Tournament
info.tournament.type            = Type:
info.tournament.numTeams        = Number of Teams:
info.tournament.numLocations    = Number of Locations:
info.tournament.startDate       = Start Date:
info.tournament.endDate         = End Date:
info.tournament.numRounds       = Total Rounds:
info.tournament.numMatches      = Total Matches:
app.button.viewTournamentCalendar= View Tournament Calendar
app.button.generateSeasonHtml   = Generate Season HTML
app.button.generateSeasonWiki   = Generate Season Wikitext
tournament.type.StraightRoundRobin= Straight Round Robin
tournament.type.StraightRoundRobinHomeAway= Straight Round Robin (Home and Away Matches)
app.newStatus                   = New Season
app.lastSaved                   = Last Saved:
app.unsaved                     = Unsaved Changes
team.editor.title               = Team Editor
team.prompt.teamName            = Team Name
team.prompt.shortName           = Shortened Team Name
team.prompt.teamHome            = Team's Home Location
team.label.teamName             = Name
team.label.shortName            = Short Name
team.label.teamHome             = Home Location
team.col.name                   = Player Name
team.col.skill                  = Skills
team.col.offense                = Offense
team.col.defense                = Defense
team.col.teamwork               = Teamwork
team.col.fouling                = Fouling
team.col.random                 = Random
team.col.randomName             = Name
team.col.randomSkills           = Skills
team.desc.title                 = Using Team Editor
team.desc.name.title            = Team Name
team.desc.name                  = Change the team name in real time in the Team Name text field.
team.desc.home.title            = Team Home
team.desc.home                  = Change the team's home in real time in the Team Home text field.\n\n\
  The team's location should be the city or pitch that the team plays at.  Only one match can take place at the same location at the same time.
team.desc.playerName.title      = Player Name
team.desc.playerName            = Double-click on the player's name to edit the name.  Pressing enter will save the changes, escape will discard the changes.\n\n\
  Use the random name button to generate a random name for the player.
team.desc.playerSkills.title    = Player Skills
team.desc.playerSkills          = Valid Skill Number: 1-10\n\n\
  Double click on the skill of the player you wish to edit.  Pressing enter will save the changes, escape will discard the changes.\n\n\
  Use the random skills button to generate new numbers for all the player's skills.
team.playerHeader.beaters       = Beaters
team.playerHeader.chasers       = Chasers
team.playerHeader.keepers       = Keepers
team.playerHeader.seekers       = Seekers
tournament.editor.title         = Tournament Editor
tournament.label.type           = Tournament Type
tournament.label.leagueName     = League Name
tournament.label.startDate      = Start Week
tournament.label.matchDayTimes  = Match Days and Times
tournament.label.matchDay.matches= Matches
tournament.label.matchDay.matchesPerWeek= per Week:
tournament.col.matchDayOfWeek   = Day Of Week
tournament.col.matchStartTime   = Start Time
tournament.col.matchPriority    = Priority
tournament.col.matchCount       = Count
tournament.col.matchDayTimeRemove= Remove
tournament.label.blackoutDates  = Blackout Dates
tournament.col.blackoutStart    = Blackout Start Date
tournament.col.blackoutEnd      = Blackout End Date
tournament.col.blackoutRemove   = Remove
tournament.button.blackoutAdd   = Add
player.beater                   = Beater
player.chaser                   = Chaser
player.keeper                   = Keeper
player.seeker                   = Seeker
file.ext.json                   = JSON Files
alert.exception.title           = Exception Encountered
alert.exception.stacktrace      = Exception Stacktrace:
alert.about.title               = About Quidditch Season Generator
alert.about.header              = Quidditch Season Generator
alert.about.content             = The Quidditch Season Generator was originally created for Absit Omen (absitomen.com)\n\
\n\
Quidditch Season Generator\n\
Copyright (C) 2022.  Cody Williams\n\
\n\
This program is free software: you can redistribute it and/or modify\n\
it under the terms of the GNU General Public License as published by\n\
the Free Software Foundation, either version 3 of the License, or\n\
(at your option) any later version.\n\
\n\
This program is distributed in the hope that it will be useful,\n\
but WITHOUT ANY WARRANTY; without even the implied warranty of\n\
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\
GNU General Public License for more details.\n\
\n\
You should have received a copy of the GNU General Public License\n\
along with this program.  If not, see <https://www.gnu.org/licenses/>.
gen.team.newName                = Team
gen.team.newHome                = Home Location
gen.team.randomHome             = Pitch
gen.player.newName              = Player
tournament.calendar.window.title= Tournament Calendar
###########################################################################################
match.versus.abbr               = vs
###########################################################################################
#                           Output Text                                                   #
###########################################################################################
# Placeholders:
# Surround the placeholders with ${}
#   Any Page:
#       leagueName =  Name of the league specified in the tournament setup
#       yearRange =  The year range
#   Matches and Plays:
#       homeTeam            Name of the home team
#       homeTeamShort       Short name of the home team
#       awayTeam            Name of the away team
#       awayTeamShort       Short name of the away team
#       date                The date of the match
#   All Plays:
#       attackingTeam       Team name of the chaser with the quaffle or the seeker.
#       attackingTeamShort  Short name of the attacking team
#       defendingTeam       Team name of defending team or the otherSeeker.
#       defendingTeamShort  Short name of the defending team.
#       beaterHitter        The beater of the defending team hitting the bludger.
#       beaterBlocker       The beater of the attacking team blocking the bludger.
#   Chaser Plays:
#       attacker            The chaser with quaffle at start of play.
#       defender            The chaser of the defending team who gets the quaffle at the end of the play.
#   Seeker Plays:
#       seeker              The seeker who catches the snitch
#       otherSeeker         The seeker who did not catch the snitch
leagueName                      = ${leagueName}
yearRange                       = ${yearRange}
########################### Season Output
meta.tournament.keywords        = ${leagueName}, ${yearRange}, Harry Potter, Quidditch, RPG, Role Playing Game

description.tournament.type.StraightRoundRobin= The ${leagueName} play a round-robin tournament. All teams play each other once. There are no caps on the length of the game, when the snitch is caught the game ends.\n\
A win earns two points. In addition to these two points a win by 150 points earns five points, by 100 points an extra three points and by 50 points an extra one point. The team with the most points at the end of the season wins the League Cup.
description.tournament.type.StraightRoundRobinHomeAway= The ${leagueName} play a double round-robin tournament. All teams play each other twice, once at home and once away. There are no caps on the length of the game, when the snitch is caught the game ends.\n\
A win earns two points. In addition to these two points a win by 150 points earns five points, by 100 points an extra three points and by 50 points an extra one point. The team with the most points at the end of the season wins the League Cup.

openingDay                      = Opening Day of ${yearRange} Season
tournamentName                  = ${leagueName} Cup
tournamentTitle                 = ${leagueName} Cup (${yearRange})
tournament.key.header           = Key
tournament.key.winner           = Winner of Match
header.round                    = Round:
header.date                     = Date
header.home                     = Home
header.away                     = Away
header.location                 = Location
header.length                   = Length
header.points                   = Points
header.score                    = Score
header.schedule                 = Schedule
header.rankings                 = Cup Rankings
header.rank.team                = Team
header.rank.points              = Final Points
rankings                        = ${leagueName} Cup Rankings at the end of the ${yearRange} season.
###########################################################################################
########################### Match Output
match.title                     = Match: ${homeTeam} vs ${awayTeam}
match.title.i                   = Match: ${homeTeam} vs ${awayTeam} (${i})
meta.match.keywords             = ${homeTeam}, ${awayTeam}, ${leagueName}, ${date}, Harry Potter, Quidditch, RPG, Role Playing Game
match.ib.title                  = Quidditch Match
match.ib.location               = Match Location
match.ib.start                  = Start of Game
match.ib.end                    = End of Game
match.ib.length                 = Length
match.ib.snitchRelease          = Snitch Release
match.ib.fouls                  = Fouls
match.ib.finalScore             = Final Score
match.ib.footerText             = ${leagueName} Cup (${yearRange})
match.score                     = Score
match.foul                      = Foul
match.penalty                   = Penalty Shot
match.final                     = Final Score
match.time                      = Time
###########################################################################################
########################### Chaser Plays
# chaser.QuaffleOutcome.BludgerOutcome.player Text strings for Chaser Plays including player names.
# chaser.QuaffleOutcome.BludgerOutcome Text strings for Chaser Plays without including player names.
# QuaffleOutcomes turnover, miss, block (blocked by keeper), scored
# BludgerOutcomes none (no bludger involved with play), blocked (by beater on attacking team), hit, miss
chaser.turnover.none.player     = ${attacker} (${attackingTeamShort}) turns over quaffle to ${defender} (${defendingTeamShort}).
chaser.turnover.none            = ${attackingTeamShort} turns over the quaffle to ${defendingTeamShort}.
chaser.turnover.blocked.player  = ${attacker} (${attackingTeamShort}) turns over the quaffle, despite ${beaterBlocker} blocking the bludger hit by ${beaterHitter}, ${defender} (${defendingTeamShort}) has the quaffle.
chaser.turnover.blocked         = ${attackingTeamShort} turns over the quaffle despite bludger being blocked, ${defendingTeamShort} has the quaffle.
chaser.turnover.hit.player      = ${attacker} (${attackingTeamShort}) takes a bludger hit from ${beaterHitter}, ${defender} (${defendingTeamShort}) has the quaffle.
chaser.turnover.hit             = ${attackingTeamShort} takes a bludger hit and turns over the quaffle, ${defendingTeamShort} has the quaffle.
chaser.turnover.missed.player   = ${attacker} (${attackingTeamShort}) dodges bludger hit by ${beaterHitter} but turns over the quaffle, ${defender} (${defendingTeamShort}) has the quaffle.
chaser.turnover.missed          = ${attackingTeamShort} turns over the quaffle despite dodging bludger, ${defendingTeamShort} has the quaffle.
chaser.missed.none.player       = ${attacker} (${attackingTeamShort}) misses the shot.  ${defender} (${defendingTeamShort}) has the quaffle.
chaser.missed.none              = ${attackingTeamShort} misses the shot. ${defendingTeamShort} has the quaffle.
chaser.missed.blocked.player    = ${attacker} (${attackingTeamShort}) misses the shot, despite bludger being blocked by ${beaterBlocker}.  ${defender} (${defendingTeamShort}) has the quaffle.
chaser.missed.blocked           = ${attackingTeamShort} missed the shot, despite bludger being blocked. ${defendingTeamShort} has the quaffle.
chaser.missed.hit.player        = ${attacker} (${attackingTeamShort}) is hit by bludger from ${beaterHitter} and misses the shot. ${defender} (${defendingTeamShort}) has the quaffle.
chaser.missed.hit               = ${attckingTeam} missed the shot after chaser was hit by bludger.  ${defendingTeamShort} has the quaffle.
chaser.missed.missed.player     = ${attacker} (${attackingTeamShort})  dodges bludger hit by ${beaterHitter} but misses the shot. ${defender} (${defendingTeamShort}) has the quaffle.
chaser.missed.missed            = ${attackingTeamShort}'s chaser dodged a bludger but missed the shot. ${defendingTeamShort} has the quaffle.
chaser.blocked.none.player      = ${attacker}'s (${attackingTeamShort}) shot is blocked by ${keeper}.  ${defender} (${defendingTeamShort}) has the quaffle.
chaser.blocked.none             = ${attackingTeamShort}'s shot is blocked. ${defendingTeamShort} has the quaffle.
chaser.blocked.blocked.player   = ${attacker} (${attackingTeamShort}) bludger blocked by ${beaterBlocker} and shot is blocked by ${keeper}.  ${defender} (${defendingTeamShort}) has the quaffle.
chaser.blocked.blocked          = ${attackingTeamShort} blocked bludger but their shot was blocked. ${defendingTeamShort} has the quaffle.
chaser.blocked.hit.player       = ${attacker} (${attackingTeamShort}) takes a blodger hit by ${beaterHitter} and the shot is blocked by ${keeper}.  ${defender} (${defendingTeamShort}) has the quaffle.
chaser.blocked.hit              = ${attackingTeamShort}'s chaser is hit by a bludger and the shot was blocke. ${defendingTeamShort} has the quaffle.
chaser.blocked.missed.player    = ${attacker} (${attackingTeamShort}) dodged the bludger hit by ${beaterHitter} but the shot is blocked by ${keeper}.  ${defender} (${defendingTeamShort}) has the quaffle.
chaser.blocked.missed           = ${attackingTeamShort}'s chaser dodged the bludger but the shot was blocked. ${defendingTeamShort} has the quaffle.
chaser.scored.none.player       = ${attacker} (${attackingTeamShort}) scores!  ${defender} (${defendingTeamShort}) has the quaffle.
chaser.scored.none              = ${attackingTeamShort} scores! ${defendingTeamShort} has the quaffle.
chaser.scored.blocked.player    = ${attacker} (${attackingTeamShort}) scores after ${beaterBlocker} blocks the bludger from ${beaterHitter}!  ${defender} (${defendingTeamShort}) has the quaffle.
chaser.scored.blocked           = ${attackingTeamShort} blocks the bludger and scores! ${defendingTeamShort} has the quaffle.
chaser.scored.hit.player        = ${attacker} (${attackingTeamShort}) scores after taking bludger hit from ${beaterHitter}!  ${defender} (${defendingTeamShort}) has the quaffle.
chaser.scored.hit               = ${attackingTeamShort} is hit by the bludger but still scores! ${defendingTeamShort} has the quaffle.
chaser.scored.missed.player     = ${attacker} (${attackingTeamShort}) doges bludger and scores!  ${defender} (${defendingTeamShort}) has the quaffle.
chaser.scored.missed            = ${attackingTeamShort} dodges the bludger and scores! ${defendingTeamShort} has the quaffle.
foul.scored.player              = ${fouler} (${foulerTeamShort}) committed a foul. ${attacker} (${attackingTeamShort}) takes penalty shot and scores!
foul.scored                     = ${foulerTeamShort} committed a foul. ${attackingTeamShort} scores! ${defendingTeamShort} has the quaffle.
foul.blocked.player             = ${fouler} (${foulerTeamShort}) committed a foul. ${attacker}'s (${attackingTeamShort}) penalty shot is blocked by ${keeper}.
foul.blocked                    = ${foulerTeamShort} committed a foul. ${attackingTeamShort}'s penalty shot is blocked.
foul.missed.player              = ${fouler} (${foulerTeamShort}) committed a foul. ${attacker} (${attackingTeamShort}) misses the penalty shot.
foul.missed                     = ${foulerTeamShort} committed a foul. ${attackingTeamShort} misses the penalty shot.
injury.bludger_blocked.player   = ${injuredPlayer} (${injuredPlayerTeamShort}) was injured while blocking bludger.
injury.bludger_blocked= 
injury.bludger_hit.player       = ${injuredPlayer} (${injuredPlayerTeamShort}) was injured after taking hit from bludger.
injury.bludger_hit= 
injury.chaser.player            = ${injuredPlayer} (${injuredPlayerTeamShort}) was injured during the play.
injury.chaser= 
injury.keeper.blocked.player    = ${injuredPlayer} (${injuredPlayerTeamShort}) was injured blocking the quaffle.
injury.keeper.missed.player     = ${injuredPlayer} (${injuredPlayerTeamShort}) was injured trying to block the quaffle.
injury.keeper.blocked= 
injury.keeper.missed= 
###########################################################################################
########################### Seeker Plays
# seeker.SnitchOutcome.BludgerOutcome.player Text strings for Chaser Plays including player names.
# seeker.SnitchOutcome.BludgerOutcome Text strings for Chaser Plays without including player names.
# SnitchOutcomes feint (unused), seen (unused with bludgers), missed, caught, stolen
# BludgerOutcomes none (no bludger involved with play), blocked (by beater on attacking team), hit, miss
# seeker.feint.none.player   = 
# seeker.feint.none          = 
# seeker.feint.blocked.player= 
# seeker.feint.blocked       = 
# seeker.feint.hit.player    = 
# seeker.feint.hit           = 
# seeker.feint.missed.player = 
# seeker.feint.missed        = 
seeker.seen.none.player         = Snitch was seen but no one got close.
seeker.seen.none                = Snitch was seen but no one got close.
# seeker.seen.blocked.player = 
# seeker.seen.blocked        = 
# seeker.seen.hit.player     = 
# seeker.seen.hit            = 
# seeker.seen.missed.player  = 
# seeker.seen.missed         = 
seeker.missed.none.player       = ${seeker} (${attackingTeamShort}) missed the snitch.
seeker.missed.none              = ${attackingTeamShort} missed the snitch.
seeker.missed.blocked.player    = ${seeker} (${attackingTeamShort}) missed the snitch despite ${beaterBlocker} blocking bludger from ${beaterHitter}.
seeker.missed.blocked           = ${attackingTeamShort} missed the snitch despite bludger being blocked.
seeker.missed.hit.player        = ${seeker} (${attackingTeamShort}) missed the snitch after taking a bludger hit by ${beaterHitter}.
seeker.missed.hit               = ${attackingTeamShort} missed the snitch after being hit by bludger.
seeker.missed.missed.player     = ${seeker} (${attackingTeamShort}) missed the snitch after dodging bludger from ${beaterHitter}
seeker.missed.missed            = ${attackingTeamShort} missed the snitch after being forced to dodge bludger.
seeker.caught.none.player       = ${seeker} (${attackingTeamShort}) catches the snitch!
seeker.caught.none              = ${attackingTeamShort} catches the snitch!
seeker.caught.blocked.player    = ${seeker} (${attackingTeamShort}) protected from bludger by ${beaterBlocker}, catches the snitch!
seeker.caught.blocked           = ${attackingTeamShort} catches the snitch after bludger blocked!
seeker.caught.hit.player        = ${seeker} (${attackingTeamShort}) takes a bludger hit and still catches the snitch!
seeker.caught.hit               = ${attackingTeamShort} catches the snitch after bludger hit!
seeker.caught.missed.player     = ${seeker} (${attackingTeamShort}) dodges bludger and catches the snitch!
seeker.caught.missed            = ${attackingTeamShort} catches the snitch after dodging bludger!
seeker.stolen.none.player       = ${seeker} (${attackingTeamShort}) stole the snitch right from under ${otherSeeker}'s nose.
seeker.stolen.none              = ${attackingTeamShort} steals the snitch!
seeker.stolen.blocked.player    = ${seeker} (${attackingTeamShort}) protected from bludger by ${beaterBlocker} steals the snitch right from under ${otherSeeker}'s nose.
seeker.stolen.blocked           = ${attackingTeamShort} steals the snitch after bludger blocked!
seeker.stolen.hit.player        = ${seeker} (${attackingTeamShort}) steals the snitch right from under ${otherSeeker}'s nose despite taking bludger hit from ${beaterHitter}
seeker.stolen.hit               = ${attackingTeamShort} steals the snitch after bludger hit!
seeker.stolen.missed.player     = ${seeker} (${attackingTeamShort}) steals the snitch right from under ${otherSeeker}'s nose after dodging bludger hit by ${beaterHitter}
seeker.stolen.missed            = ${attackingTeamShort} steals the snitch after dodging bludger!
###########################################################################################
########################### Standard Tournaments
tournament.menu                 = Standard Tournaments
tournament.BIQL.name            = British and Irish Quidditch League
tournament.BIQL.menu.blank      = Load British and Irish Quidditch League with blank players
tournament.BIQL.menu.random     = Load British and Irish Quidditch League with random players
tournament.BIQL.appleby.name    = Appleby Arrows
tournament.BIQL.appleby.name.short = Arrows
tournament.BIQL.appleby.home    = Appleby, Lincolnshire, England
tournament.BIQL.ballycastle.name = Ballycastle Bats
tournament.BIQL.ballycastle.name.short = Bats
tournament.BIQL.ballycastle.home = Ballycastle, County Antrim, Northern Ireland
tournament.BIQL.caerphilly.name = Caerphilly Catapults
tournament.BIQL.caerphilly.name.short = Catapults
tournament.BIQL.caerphilly.home = Caerphilly, Caerphilly, Wales
tournament.BIQL.chudley.name    = Chudley Cannons
tournament.BIQL.chudley.name.short = Cannons
tournament.BIQL.chudley.home    = Chudleigh, Devon, England
tournament.BIQL.falmouth.name   = Falmouth Falcons
tournament.BIQL.falmouth.name.short = Falcons
tournament.BIQL.falmouth.home   = Falmouth, Cornwall, England
tournament.BIQL.holyhead.name   = Holyhead Harpies
tournament.BIQL.holyhead.name.short = Harpies
tournament.BIQL.holyhead.home   = Holyhead, Isle of Anglesey, Wales
tournament.BIQL.kenmare.name    = Kenmare Kestrels
tournament.BIQL.kenmare.name.short = Kestrels
tournament.BIQL.kenmare.home    = Kenmare, Munster, Ireland
tournament.BIQL.montrose.name   = Montrose Magpies
tournament.BIQL.montrose.name.short = Magpies
tournament.BIQL.montrose.home   = Montrose, Angus, Scotland
tournament.BIQL.portree.name    = Pride of Portree
tournament.BIQL.portree.name.short = Pride
tournament.BIQL.portree.home    = Portree, Highland, Scotland
tournament.BIQL.puddlemere.name = Puddlemere United
tournament.BIQL.puddlemere.name.short = United
tournament.BIQL.puddlemere.home = Puddletown, Dorset, England
tournament.BIQL.tutshill.name   = Tutshill Tornados
tournament.BIQL.tutshill.name.short = Tornados
tournament.BIQL.tutshill.home   = Tutshill, Gloucestershire, England
tournament.BIQL.wigtown.name    = Wigtown Wanderers
tournament.BIQL.wigtown.name.short = Wanderers
tournament.BIQL.wigtown.home    = Wigtown, Dumfries and Galloway, Scotland
tournament.BIQL.wimbourne.name  = Wimbourne Wasps
tournament.BIQL.wimbourne.name.short = Wasps
tournament.BIQL.wimbourne.home  = Wimborne Minster, Dorset, England