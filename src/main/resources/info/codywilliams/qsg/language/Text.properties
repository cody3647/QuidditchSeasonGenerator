#
# Quidditch Season Generator
# Copyright (C) 2022.  Cody Williams
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
###########################################################################################
#                           Application Text                                              #
###########################################################################################
app.title=Quidditch Season Generator
app.menu.file=_File
app.menu.new=New
app.menu.open=Open\u2026
app.menu.close=Close
app.menu.save=Save
app.menu.saveas=Save As\u2026
app.menu.help=_Help
app.menu.about=About Quidditch Season Generator...
app.menu.matchCalendar=Match Calendar

app.label.teams=Teams
app.button.newTeam=New
app.button.randomTeam=Random
app.button.removeTeam=Remove
app.button.teamEditor=Edit Teams
app.button.tournamentEditor=Edit Tournament
info.tournament=Tournament
info.tournament.type=Type:
info.tournament.numTeams=Number of Teams:
info.tournament.numLocations=Number of Locations:
info.tournament.startDate=Start Date:
info.tournament.endDate=End Date:
info.tournament.numRounds=Total Rounds:
info.tournament.numMatches=Total Matches:
app.button.viewTournamentCalendar=View Tournament Calendar
app.button.generateSeason=Generate Season

tournament.type.StraightRoundRobin=Straight Round Robin
tournament.type.StraightRoundRobinHomeAway=Straight Round Robin (Home and Away Matches)

app.newStatus=New Season
app.lastSaved=Last Saved:
app.unsaved=Unsaved Changes

team.editor.title=Team Editor
team.prompt.teamName=Team Name
team.prompt.teamHome=Team's Home Location
team.label.teamName=Name
team.label.teamHome=Home Location
team.col.name=Player Name
team.col.skill=Skills
team.col.offense=Offense
team.col.defense=Defense
team.col.teamwork=Teamwork
team.col.fouling=Fouling
team.col.random=Random
team.col.randomName=Name
team.col.randomSkills=Skills

team.desc.title=Using Team Editor
team.desc.name.title=Team Name
team.desc.name=Change the team name in real time in the Team Name text field.
team.desc.home.title=Team Home
team.desc.home=Change the team's home in real time in the Team Home text field.\n\n\
  The team's location should be the city or pitch that the team plays at.  Only one match can take place at the same location at the same time.
team.desc.playerName.title=Player Name
team.desc.playerName=Double click on the player's name to edit the name.  Pressing enter will save the changes, escape will discard the changes.\n\n\
  Use the random name button to generate a random name for the player.
team.desc.playerSkills.title=Player Skills
team.desc.playerSkills=Valid Skill Number: 1-10\n\n\
  Double click on the skill of the player you wish to edit.  Pressing enter will save the changes, escape will discard the changes.\n\n\
  Use the random skills button to generate new numbers for all the player's skills.

team.playerHeader.beaters=Beaters
team.playerHeader.chasers=Chasers
team.playerHeader.keepers=Keepers
team.playerHeader.seekers=Seekers

tournament.editor.title=Tournament Editor
tournament.label.type=Tournament Type
tournament.label.leagueName=League Name
tournament.label.roundsPerWeek=Rounds Per Week
tournament.label.hoursBetweenMatches=Hours Between Matches
tournament.label.startDate=Start Date
tournament.label.acceptableTimes=Acceptable Start Time Range
tournament.col.day=Day
tournament.col.startTime=Earliest
tournament.col.endTime=Latest
tournament.col.dayValid=Enable Day
tournament.label.blackoutDates=Blackout Dates
tournament.col.blackoutStart=Blackout Start Date
tournament.col.blackoutEnd=Blackout End Date
tournament.col.blackoutRemove=Remove
tournament.button.blackoutAdd=Add

player.beater=Beater
player.chaser=Chaser
player.keeper=Keeper
player.seeker=Seeker

file.ext.json=JSON Files

alert.exception.title=Exception Encountered
alert.exception.stacktrace=Exception Stacktrace:
alert.about.title=About Quidditch Season Generator
alert.about.header=Quidditch Season Generator
alert.about.content=The Quidditch Season Generator was originally created for Absit Omen (absitomen.com)\n\
\n\
Quidditch Season Generator\n\
Copyright (C) 2022.  Cody Williams\n\
\n\
This program is free software: you can redistribute it and/or modify\n\
it under the terms of the GNU General Public License as published by\n\
the Free Software Foundation, either version 3 of the License, or\n\
(at your option) any later version.\n\
\n\
This program is distributed in the hope that it will be useful,\n\
but WITHOUT ANY WARRANTY; without even the implied warranty of\n\
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\
GNU General Public License for more details.\n\
\n\
You should have received a copy of the GNU General Public License\n\
along with this program.  If not, see <https://www.gnu.org/licenses/>.

gen.team.newName=Team
gen.team.newHome=Home Location
gen.team.randomHome=Pitch
gen.player.newName=Player

tournament.calendar.window.title=Tournament Calendar
###########################################################################################

match.versus.abbr=vs

###########################################################################################
#                           Output Text                                                   #
###########################################################################################
########################### Season Output
meta.tournament.keywords = ${leagueName}, ${yearRange}, Harry Potter, Quidditch, RPG, Role Playing Game


description.tournament.type.StraightRoundRobin = The ${leagueName} play a round robin tournament. All teams play each other once. There are no caps on the length of the game, when the snitch is caught the game ends.\n\
A win earns two points. In addition to these two points a win by 150 points earns five points, by 100 points an extra three points and by 50 points an extra one point. The team with the most points at the end of the season wins the League Cup.

description.tournament.type.StraightRoundRobinHomeAway = The ${leagueName} play a double round robin tournament. All teams play each other twice, once at home and once away. There are no caps on the length of the game, when the snitch is caught the game ends.\n\
A win earns two points. In addition to these two points a win by 150 points earns five points, by 100 points an extra three points and by 50 points an extra one point. The team with the most points at the end of the season wins the League Cup.

openingDay = Opening Day of ${yearRange} Season
tournamentName = ${leagueName} Cup
tournamentTitle = ${leagueName} Cup (${yearRange})

header.round = Round:
header.date = Date
header.home = Home
header.away = Away
header.location = Location
header.length = Length
header.points = Points
header.schedule = Schedule
header.rankings = Cup Rankings

rankings = ${leagueName} Cup Rankings at the end of the ${yearRange} season.

###########################################################################################
########################### Match Output
meta.match.keywords = ${homeTeam}, ${awayTeam}, ${leagueName}, ${date}, Harry Potter, Quidditch, RPG, Role Playing Game
match.ib.title = Quidditch Match
match.ib.location = Match Location
match.ib.start = Start of Game
match.ib.end = End of Game
match.ib.length = Length
match.ib.fouls = Fouls
match.ib.finalScore = Final Score
match.ib.footerLink = ${leagueName} Cup (${yearRange})

###########################################################################################
########################### Chaser Plays
# chaser.QuaffleOutcome.BludgerOutcome.player Text strings for Chaser Plays including player names.
# chaser.QuaffleOutcome.BludgerOutcome Text strings for Chaser Plays without including player names.

# QuaffleOutcomes turnover, miss, block (blocked by keeper), scored
# BludgerOutcomes none (no bludger involved with play), blocked (by beater on attacking team), hit, miss

# parameters:
#   attackingTeam = team name of the chaser with the quaffle
#   defendingTeam = team name of the defending team
# parameters for player version only:
#   attacker = chaser with quaffle at start of play.
#   defender = chaser of the defending team who gets the quaffle at the end of the play.
#   beaterHitter = beater of the defending team hitting the bludger.
#   beaterBlocker = beater of the attacking team blocking the bludger.
#
chaser.turnover.none.player   = ${attacker} (${attackingTeam}) turns over quaffle to ${defender} (${defendingTeam}).
chaser.turnover.none          = ${attackingTeam} turns over the quaffle to ${defendingTeam}.
chaser.turnover.blocked.player= ${attacker} (${attackingTeam}) turns over the quaffle, despite ${beaterBlocker} blocking the bludger hit by ${beaterHitter}, ${defender} (${defendingTeam}) has the quaffle.
chaser.turnover.blocked       = ${attackingTeam} turns over the quaffle despite bludger being blocked, ${defendingTeam} has the quaffle.
chaser.turnover.hit.player    = ${attacker} (${attackingTeam}) takes a bludger hit from ${beaterHitter}, ${defender} (${defendingTeam}) has the quaffle.
chaser.turnover.hit           = ${attackingTeam} takes a bludger hit and turns over the quaffle, ${defendingTeam} has the quaffle.
chaser.turnover.missed.player = ${attacker} (${attackingTeam}) dodges bludger hit by ${beaterHitter} but turns over the quaffle, ${defender} (${defendingTeam}) has the quaffle.
chaser.turnover.missed        = ${attackingTeam} turns over the quaffle despite dodging bludger, ${defendingTeam} has the quaffle.

chaser.missed.none.player     = ${attacker} (${attackingTeam}) misses the shot.  ${defender} (${defendingTeam}) has the quaffle.
chaser.missed.none            = ${attackingTeam} misses the shot. ${defendingTeam} has the quaffle.
chaser.missed.blocked.player  = ${attacker} (${attackingTeam}) misses the shot, despite bludger being blocked by ${beaterBlocker}.  ${defender} (${defendingTeam}) has the quaffle.
chaser.missed.blocked         = ${attackingTeam} missed the shot, despite bludger being blocked. ${defendingTeam} has the quaffle.
chaser.missed.hit.player      = ${attacker} (${attackingTeam}) is hit by bludger from ${beaterHitter} and misses the shot. ${defender} (${defendingTeam}) has the quaffle.
chaser.missed.hit             = ${attckingTeam} missed the shot after chaser was hit by bludger.  ${defendingTeam} has the quaffle.
chaser.missed.missed.player   = ${attacker} (${attackingTeam})  dodges bludger hit by ${beaterHitter} but misses the shot. ${defender} (${defendingTeam}) has the quaffle.
chaser.missed.missed          = ${attackingTeam}'s chaser dodged a bludger but missed the shot. ${defendingTeam} has the quaffle.

chaser.blocked.none.player    = ${attacker}'s (${attackingTeam}) shot is blocked by ${keeper}.  ${defender} (${defendingTeam}) has the quaffle.
chaser.blocked.none           = ${attackingTeam}'s shot is blocked. ${defendingTeam} has the quaffle.
chaser.blocked.blocked.player = ${attacker} (${attackingTeam}) bludger blocked by ${beaterBlocker} and shot is blocked by ${keeper}.  ${defender} (${defendingTeam}) has the quaffle.
chaser.blocked.blocked        = ${attackingTeam} blocked bludger but their shot was blocked. ${defendingTeam} has the quaffle.
chaser.blocked.hit.player     = ${attacker} (${attackingTeam}) takes a blodger from ${beaterHitter} and the shot is blocked by ${keeper}.  ${defender} (${defendingTeam}) has the quaffle.
chaser.blocked.hit            = ${attackingTeam}'s chaser is hit by a bludger and the shot was blocke. ${defendingTeam} has the quaffle.
chaser.blocked.missed.player  = ${attacker} (${attackingTeam}) dodges the bludger from ${beaterHitter} but the shot is blocked by ${keeper}.  ${defender} (${defendingTeam}) has the quaffle.
chaser.blocked.missed         = ${attackingTeam}'s chaser dodged the bludger but the shot was blocked. ${defendingTeam} has the quaffle.

chaser.scored.none.player     = ${attacker} (${attackingTeam}) scores!  ${defender} (${defendingTeam}) has the quaffle.
chaser.scored.none            = ${attackingTeam} scores! ${defendingTeam} has the quaffle.
chaser.scored.blocked.player  = ${attacker} (${attackingTeam}) scores after ${beaterBlocker} blocks the bludger from ${beaterHitter}!  ${defender} (${defendingTeam}) has the quaffle.
chaser.scored.blocked         = ${attackingTeam} blocks the bludger and scores! ${defendingTeam} has the quaffle.
chaser.scored.hit.player      = ${attacker} (${attackingTeam}) scores after taking bludger hit from ${beaterHitter}!  ${defender} (${defendingTeam}) has the quaffle.
chaser.scored.hit             = ${attackingTeam} is hit by the bludger but still scores! ${defendingTeam} has the quaffle.
chaser.scored.missed.player   = ${attacker} (${attackingTeam}) doges bludger and scores!  ${defender} (${defendingTeam}) has the quaffle.
chaser.scored.missed          = ${attackingTeam} dodges the bludger and scores! ${defendingTeam} has the quaffle.


###########################################################################################
########################### Seeker Plays
# seeker.SnitchOutcome.BludgerOutcome.player Text strings for Chaser Plays including player names.
# seeker.SnitchOutcome.BludgerOutcome Text strings for Chaser Plays without including player names.

# SnitchOutcomes feint (unused), seen (unused with bludgers), missed, caught, stolen
# BludgerOutcomes none (no bludger involved with play), blocked (by beater on attacking team), hit, miss
# parameters:
#   attackingTeam = team name of the seeker.
#   defendingTeam = team name of the otherSeeker.
# parameters for player version only:
#   seeker = seeker who catches the snitch
#   otherSeeker = seeker who did not catch the snitch
#   beaterHitter = beater of the defending team hitting the bludger.
#   beaterBlocker = beater of the attacking team blocking the bludger.

# seeker.feint.none.player   =
# seeker.feint.none          =
# seeker.feint.blocked.player=
# seeker.feint.blocked       =
# seeker.feint.hit.player    =
# seeker.feint.hit           =
# seeker.feint.missed.player =
# seeker.feint.missed        =

seeker.seen.none.player      = Snitch was seen but no one got close.
seeker.seen.none             = Snitch was seen but no one got close.
# seeker.seen.blocked.player =
# seeker.seen.blocked        =
# seeker.seen.hit.player     =
# seeker.seen.hit            =
# seeker.seen.missed.player  =
# seeker.seen.missed         =

seeker.missed.none.player    = ${seeker} (${attackingTeam}) missed the snitch.
seeker.missed.none           = ${attackingTeam} missed the snitch.
seeker.missed.blocked.player = ${seeker} (${attackingTeam}) missed the snitch despite ${beaterBlocker} blocking bludger from ${beaterHitter}.
seeker.missed.blocked        = ${attackingTeam} missed the snitch despite bludger being blocked.
seeker.missed.hit.player     = ${seeker} (${attackingTeam}) missed the snitch after taking a bludger hit by ${beaterHitter}.
seeker.missed.hit            = ${attackingTeam} missed the snitch after being hit by bludger.
seeker.missed.missed.player  = ${seeker} (${attackingTeam}) missed the snitch after dodging bludger from ${beaterHitter}
seeker.missed.missed         = ${attackingTeam} missed the snitch after being forced to dodge bludger.

seeker.caught.none.player    = ${seeker} (${attackingTeam}) catches the snitch!
seeker.caught.none           = ${attackingTeam} catches the snitch!
seeker.caught.blocked.player = ${seeker} (${attackingTeam}) protected from bludger by ${beaterBlocker}, catches the snitch!
seeker.caught.blocked        = ${attackingTeam} catches the snitch after bludger blocked!
seeker.caught.hit.player     = ${seeker} (${attackingTeam}) takes a bludger hit and still catches the snitch!
seeker.caught.hit            = ${attackingTeam} catches the snitch after bludger hit!
seeker.caught.missed.player  = ${seeker} (${attackingTeam}) dodges bludger and catches the snitch!
seeker.caught.missed         = ${attackingTeam} catches the snitch after dodging bludger!

seeker.stolen.none.player    = ${seeker} (${attackingTeam}) stole the snitch right from under ${otherSeeker}'s nose.
seeker.stolen.none           = ${attackingTeam} steals the snitch!
seeker.stolen.blocked.player = ${seeker} (${attackingTeam}) protected from bludger by ${beaterBlocker} steals the snitch right from under ${otherSeeker}'s nose.
seeker.stolen.blocked        = ${attackingTeam} steals the snitch after bludger blocked!
seeker.stolen.hit.player     = ${seeker} (${attackingTeam}) steals the snitch right from under ${otherSeeker}'s nose despite taking bludger hit from ${beaterHitter}
seeker.stolen.hit            = ${attackingTeam} steals the snitch after bludger hit!
seeker.stolen.missed.player  = ${seeker} (${attackingTeam}) steals the snitch right from under ${otherSeeker}'s nose after dodging bludger hit by ${beaterHitter}
seeker.stolen.missed         = ${attackingTeam} steals the snitch after dodging bludger!