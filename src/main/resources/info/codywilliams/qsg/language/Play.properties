#
# Quidditch Season Generator
# Copyright (C) 2023.  Cody Williams
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

###########################################################################################
# Chaser Plays
# chaser.QuaffleOutcome.BludgerOutcome.player Text strings for Chaser Plays including player names.
# chaser.QuaffleOutcome.BludgerOutcome Text strings for Chaser Plays without including player names.

# QuaffleOutcomes turnover, miss, block (blocked by keeper), scored
# BludgerOutcomes none (no bludger involved with play), blocked (by beater on attacking team), hit, miss

# parameters:
#   attackingTeam = team name of the chaser with the quaffle
#   defendingTeam = team name of the defending team
# parameters for player version only:
#   attacker = chaser with quaffle at start of play.
#   defender = chaser of the defending team who gets the quaffle at the end of the play.
#   beaterHitter = beater of the defending team hitting the bludger.
#   beaterBlocker = beater of the attacking team blocking the bludger.
#
chaser.turnover.none.player   = ${attacker} (${attackingTeam}) turns over quaffle to ${defender} (${defendingTeam}).
chaser.turnover.none          = ${attackingTeam} turns over the quaffle to ${defendingTeam}.
chaser.turnover.blocked.player= ${attacker} (${attackingTeam}) turns over the quaffle, despite ${beaterBlocker} blocking the bludger hit by ${beaterHitter}, ${defender} (${defendingTeam}) has the quaffle.
chaser.turnover.blocked       = ${attackingTeam} turns over the quaffle despite bludger being blocked, ${defendingTeam} has the quaffle.
chaser.turnover.hit.player    = ${attacker} (${attackingTeam}) takes a bludger hit from ${beaterHitter}, ${defender} (${defendingTeam}) has the quaffle.
chaser.turnover.hit           = ${attackingTeam} takes a bludger hit and turns over the quaffle, ${defendingTeam} has the quaffle.
chaser.turnover.missed.player = ${attacker} (${attackingTeam}) dodges bludger hit by ${beaterHitter} but turns over the quaffle, ${defender} (${defendingTeam}) has the quaffle.
chaser.turnover.missed        = ${attackingTeam} turns over the quaffle despite dodging bludger, ${defendingTeam} has the quaffle.

chaser.missed.none.player     = ${attacker} (${attackingTeam}) misses the shot.  ${defender} (${defendingTeam}) has the quaffle.
chaser.missed.none            = ${attackingTeam} misses the shot. ${defendingTeam} has the quaffle.
chaser.missed.blocked.player  = ${attacker} (${attackingTeam}) misses the shot, despite bludger being blocked by ${beaterBlocker}.  ${defender} (${defendingTeam}) has the quaffle.
chaser.missed.blocked         = ${attackingTeam} missed the shot, despite bludger being blocked. ${defendingTeam} has the quaffle.
chaser.missed.hit.player      = ${attacker} (${attackingTeam}) is hit by bludger from ${beaterHitter} and misses the shot. ${defender} (${defendingTeam}) has the quaffle.
chaser.missed.hit             = ${attckingTeam} missed the shot after chaser was hit by bludger.  ${defendingTeam} has the quaffle.
chaser.missed.missed.player   = ${attacker} (${attackingTeam})  dodges bludger hit by ${beaterHitter} but misses the shot. ${defender} (${defendingTeam}) has the quaffle.
chaser.missed.missed          = ${attackingTeam}'s chaser dodged a bludger but missed the shot. ${defendingTeam} has the quaffle.

chaser.blocked.none.player    = ${attacker}'s (${attackingTeam}) shot is blocked by ${keeper}.  ${defender} (${defendingTeam}) has the quaffle.
chaser.blocked.none           = ${attackingTeam}'s shot is blocked. ${defendingTeam} has the quaffle.
chaser.blocked.blocked.player = ${attacker} (${attackingTeam}) bludger blocked by ${beaterBlocker} and shot is blocked by ${keeper}.  ${defender} (${defendingTeam}) has the quaffle.
chaser.blocked.blocked        = ${attackingTeam} blocked bludger but their shot was blocked. ${defendingTeam} has the quaffle.
chaser.blocked.hit.player     = ${attacker} (${attackingTeam}) takes a blodger from ${beaterHitter} and the shot is blocked by ${keeper}.  ${defender} (${defendingTeam}) has the quaffle.
chaser.blocked.hit            = ${attackingTeam}'s chaser is hit by a bludger and the shot was blocke. ${defendingTeam} has the quaffle.
chaser.blocked.missed.player  = ${attacker} (${attackingTeam}) dodges the bludger from ${beaterHitter} but the shot is blocked by ${keeper}.  ${defender} (${defendingTeam}) has the quaffle.
chaser.blocked.missed         = ${attackingTeam}'s chaser dodged the bludger but the shot was blocked. ${defendingTeam} has the quaffle.

chaser.scored.none.player     = ${attacker} (${attackingTeam}) scores!  ${defender} (${defendingTeam}) has the quaffle.
chaser.scored.none            = ${attackingTeam} scores! ${defendingTeam} has the quaffle.
chaser.scored.blocked.player  = ${attacker} (${attackingTeam}) scores after ${beaterBlocker} blocks the bludger from ${beaterHitter}!  ${defender} (${defendingTeam}) has the quaffle.
chaser.scored.blocked         = ${attackingTeam} blocks the bludger and scores! ${defendingTeam} has the quaffle.
chaser.scored.hit.player      = ${attacker} (${attackingTeam}) scores after taking bludger hit from ${beaterHitter}!  ${defender} (${defendingTeam}) has the quaffle.
chaser.scored.hit             = ${attackingTeam} is hit by the bludger but still scores! ${defendingTeam} has the quaffle.
chaser.scored.missed.player   = ${attacker} (${attackingTeam}) doges bludger and scores!  ${defender} (${defendingTeam}) has the quaffle.
chaser.scored.missed          = ${attackingTeam} dodges the bludger and scores! ${defendingTeam} has the quaffle.


###########################################################################################
# Seeker Plays
# seeker.SnitchOutcome.BludgerOutcome.player Text strings for Chaser Plays including player names.
# seeker.SnitchOutcome.BludgerOutcome Text strings for Chaser Plays without including player names.

# SnitchOutcomes feint (unused), seen (unused with bludgers), missed, caught, stolen
# BludgerOutcomes none (no bludger involved with play), blocked (by beater on attacking team), hit, miss
# parameters:
#   attackingTeam = team name of the seeker.
#   defendingTeam = team name of the otherSeeker.
# parameters for player version only:
#   seeker = seeker who catches the snitch
#   otherSeeker = seeker who did not catch the snitch
#   beaterHitter = beater of the defending team hitting the bludger.
#   beaterBlocker = beater of the attacking team blocking the bludger.

# seeker.feint.none.player   =
# seeker.feint.none          =
# seeker.feint.blocked.player=
# seeker.feint.blocked       =
# seeker.feint.hit.player    =
# seeker.feint.hit           =
# seeker.feint.missed.player =
# seeker.feint.missed        =

seeker.seen.none.player      = Snitch was seen but no one got close.
seeker.seen.none             = Snitch was seen but no one got close.
# seeker.seen.blocked.player =
# seeker.seen.blocked        =
# seeker.seen.hit.player     =
# seeker.seen.hit            =
# seeker.seen.missed.player  =
# seeker.seen.missed         =

seeker.missed.none.player    = ${seeker} (${attackingTeam}) missed the snitch.
seeker.missed.none           = ${attackingTeam} missed the snitch.
seeker.missed.blocked.player = ${seeker} (${attackingTeam}) missed the snitch despite ${beaterBlocker} blocking bludger from ${beaterHitter}.
seeker.missed.blocked        = ${attackingTeam} missed the snitch despite bludger being blocked.
seeker.missed.hit.player     = ${seeker} (${attackingTeam}) missed the snitch after taking a bludger hit by ${beaterHitter}.
seeker.missed.hit            = ${attackingTeam} missed the snitch after being hit by bludger.
seeker.missed.missed.player  = ${seeker} (${attackingTeam}) missed the snitch after dodging bludger from ${beaterHitter}
seeker.missed.missed         = ${attackingTeam} missed the snitch after being forced to dodge bludger.

seeker.caught.none.player    = ${seeker} (${attackingTeam}) catches the snitch!
seeker.caught.none           = ${attackingTeam} catches the snitch!
seeker.caught.blocked.player = ${seeker} (${attackingTeam}) protected from bludger by ${beaterBlocker}, catches the snitch!
seeker.caught.blocked        = ${attackingTeam} catches the snitch after bludger blocked!
seeker.caught.hit.player     = ${seeker} (${attackingTeam}) takes a bludger hit and still catches the snitch!
seeker.caught.hit            = ${attackingTeam} catches the snitch after bludger hit!
seeker.caught.missed.player  = ${seeker} (${attackingTeam}) dodges bludger and catches the snitch!
seeker.caught.missed         = ${attackingTeam} catches the snitch after dodging bludger!

seeker.stolen.none.player    = ${seeker} (${attackingTeam}) stole the snitch right from under ${otherSeeker}'s nose.
seeker.stolen.none           = ${attackingTeam} steals the snitch!
seeker.stolen.blocked.player = ${seeker} (${attackingTeam}) protected from bludger by ${beaterBlocker} steals the snitch right from under ${otherSeeker}'s nose.
seeker.stolen.blocked        = ${attackingTeam} steals the snitch after bludger blocked!
seeker.stolen.hit.player     = ${seeker} (${attackingTeam}) steals the snitch right from under ${otherSeeker}'s nose despite taking bludger hit from ${beaterHitter}
seeker.stolen.hit            = ${attackingTeam} steals the snitch after bludger hit!
seeker.stolen.missed.player  = ${seeker} (${attackingTeam}) steals the snitch right from under ${otherSeeker}'s nose after dodging bludger hit by ${beaterHitter}
seeker.stolen.missed         = ${attackingTeam} steals the snitch after dodging bludger!